package in.Ashokit.service;


import java.util.Collections;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import in.Ashokit.Binding.Courses;
import in.Ashokit.Binding.Student;
import in.Ashokit.entity.Enrollment;
import in.Ashokit.feign.Coursefeign;
import in.Ashokit.feign.Studentclient;
import in.Ashokit.repo.Enrollmentrpo;
import java.util.stream.Collectors;

@Service
public class EnrollmentService {
	
	
	private Enrollmentrpo erepo;
	private Coursefeign cclient;
	private Studentclient sclient;
	
	@Autowired
	public EnrollmentService(Enrollmentrpo erepo, Coursefeign cclient, Studentclient sclient) {
		super();
		this.erepo = erepo;
		this.cclient = cclient;
		this.sclient = sclient;
	}


	public void enrollment(Enrollment enrollment) {
		
		erepo.save(enrollment);
	}
	
	 
	 
	 public ResponseEntity<Optional<Courses>> getCourseById(Long couseid) {
		    return cclient.getbyid(couseid);
		}
	 public ResponseEntity<Optional<Student>> getstudentid(Long studentid) {
		    return sclient.getstudent(studentid);
		}
	 
	 
	 public Optional<Enrollment> getbyid(Long id){
		 
		 
		return erepo.findById(id);
	 }
	 public List<Courses> getCoursesForStudent(Long studentid) {
	        List<Enrollment> enrollments = erepo.findByStudentid(studentid);

	        return enrollments.stream()
	            .map(enrollment -> cclient.getbyid(enrollment.getCouseid()).getBody())
	            .filter(Optional::isPresent)
	            .map(Optional::get)
	            .collect(Collectors.toList());
	    }
	}
	


	


